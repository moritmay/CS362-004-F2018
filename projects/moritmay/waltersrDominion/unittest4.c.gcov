        -:    0:Source:unittest4.c
        -:    0:Graph:unittest4.gcno
        -:    0:Data:unittest4.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://unit test 4
        -:    2://check shuffle function 
        -:    3:
        -:    4:#include "dominion.h"
        -:    5:#include "dominion_helpers.h"
        -:    6:#include <string.h>
        -:    7:#include <stdio.h>
        -:    8:#include <assert.h>
        -:    9:#include "rngs.h"
        -:   10:#include <time.h>
        -:   11:#include <stdlib.h>
        -:   12:
        1:   13:int main(){
        -:   14:  struct gameState state;
        -:   15:  struct gameState previousState;
        -:   16:  
        1:   17:  int k[10] = {adventurer, gardens, embargo, village, great_hall, mine, cutpurse,
        -:   18:	       sea_hag, tribute, smithy};
        -:   19:  int p;
        1:   20:  srand(time(0));
        -:   21:  
        -:   22:  //randomize number of players from 2-4
        1:   23:  p = (rand()%3) + 2;
        -:   24:
        1:   25:  initializeGame(p, k, rand(), &state);
        -:   26:  
        1:   27:  previousState = state;
        1:   28:  shuffle(p, &state);  
        -:   29:
        -:   30:  if (&previousState != &state) {
        1:   31:    printf("shuffle test passed\n");
        -:   32:  }  
        -:   33:  else {
        -:   34:    printf("shuffle test failed\n");
        -:   35:  }
        -:   36:
        1:   37:return 0;
        -:   38:}
